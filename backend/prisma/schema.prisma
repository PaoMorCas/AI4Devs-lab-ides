// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}
model Candidate {
  id             Int            @id @default(autoincrement())
  firstName      String         @db.VarChar(50)
  lastName       String         @db.VarChar(50)
  email          String         @db.VarChar(100) @unique
  phone          String         @db.VarChar(15)
  address        String?        @db.Text
  cvFilePath     String?        @db.VarChar(255)
  educations     Education[]
  workExperiences WorkExperience[]
}

model Education {
  id           Int       @id @default(autoincrement())
  candidateId  Int
  institutionId Int
  degree       String    @db.VarChar(100)
  startDate    DateTime? @db.Date
  endDate      DateTime? @db.Date
  description  String?   @db.Text
  candidate    Candidate @relation(fields: [candidateId], references: [id])
  institution  Institution @relation(fields: [institutionId], references: [id])
}

model WorkExperience {
  id           Int       @id @default(autoincrement())
  candidateId  Int
  companyId    Int
  position     String    @db.VarChar(100)
  startDate    DateTime? @db.Date
  endDate      DateTime? @db.Date
  description  String?   @db.Text
  candidate    Candidate @relation(fields: [candidateId], references: [id])
  company      Institution @relation(fields: [companyId], references: [id])
}

model Institution {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(100)
  type             InstitutionType
  address          String?           @db.Text
  createdAt        DateTime          @default(now())
  educations       Education[]
  workExperiences  WorkExperience[]
}

enum InstitutionType {
  University
  College
  Company
  School
  Other
}